<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

    <!-- Display on browser tab -->
    <display-name>MVCpractice</display-name>

    <!-- Which .jsp to load first, aka the home page -->
    <!--
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
    -->

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/applicationContext.xml</param-value>
    </context-param>
    <!-- Needed if we have to config.xml files. Otherwise just the dispatcher servlet will do.
    Source: http://stackoverflow.com/questions/11014782/adding-contextloaderlistener-to-web-xml-in-spring-mvc-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- For the dispatcher servlet -->
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <!-- Mapping the URL request to a front controller, AKA this guy talks to our client -->
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!-- servlet-mapping -->
        <!-- All URL requests should be mapped to spring MVC framework for further processing -->
    <!-- URL pattern -->
        <!-- explanation: http://docs.roguewave.com/hydraexpress/3.5.0/html/rwsfservletug/4-3.html -->
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>TodoListServlet</servlet-name>
        <servlet-class>helloPackage.servlets.TodoListServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>TodoListServlet</servlet-name>
        <url-pattern>/todolistcoe</url-pattern>
    </servlet-mapping>


    <filter>
        <filter-name>ObjectifyFilter</filter-name>
        <filter-class>com.googlecode.objectify.ObjectifyFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>ObjectifyFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
</web-app>